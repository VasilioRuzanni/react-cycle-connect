{"version":3,"file":"index.js","sources":["../../../../src/extra/onionify/StateIsolator.tsx","../../../../src/extra/onionify/Collection.tsx","../../../../src/extra/onionify/makeFilteredListLens.ts"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport { Scope } from \"@cycle/state\";\nimport { cycleConnect } from \"react-cycle-connect\";\n\nexport interface StateIsolatorProps {\n  children: ReactNode;\n  channelName?: string;\n  lens: Scope<any, any>;\n}\n\n// TODO Assuming the use of `@cycle/state` for now,\n// make configurable, since @cycle/state itself supports that.\nconst DEFAULT_STATE_CHANNEL_NAME = \"state\";\n\nexport const StateIsolator = cycleConnect<StateIsolatorProps>({\n  isolate: (props: StateIsolatorProps) => ({\n    [props.channelName || DEFAULT_STATE_CHANNEL_NAME]: props.lens || void 0,\n    \"*\": null\n  }),\n  displayName: \"StateIsolator\"\n})();\n\nexport default StateIsolator;\n","import React, { Children, Key, ComponentType, ReactNode } from \"react\";\nimport xs, { Stream } from \"xstream\";\nimport { StateSource, Scope, Lens } from \"@cycle/state\";\nimport {\n  cycleConnect,\n  ReactPropsSource,\n  CycleConnectedProps,\n  CycleConnectOptionsProps,\n  IsolateOption,\n  IsolateOptionFn\n} from \"react-cycle-connect\";\n\n// TODO: Reconsider the implementation to make it more TypeScript-friendly\n\nexport type ItemKeyFn<TItemState> = (\n  itemState: TItemState,\n  index?: number\n) => Key;\n\nexport interface CollectionProps {\n  // TODO: Think how to make it typed easily, given\n  // the Collection component is universal, not bound\n  // to a particular item state type.\n  lens: Scope<any, any>;\n  channelName?: string;\n  itemKeyFn?: <TItemState>(itemState: TItemState, index?: number) => Key;\n  itemIsolate?: IsolateOption;\n  itemComponent?: ComponentType;\n  itemRender?: <TItemState>(\n    itemProps: TItemState,\n    itemKey?: Key,\n    index?: number\n  ) => ReactNode;\n}\n\nexport interface ViewProps<TItemState> extends CollectionProps {\n  items: TItemState[];\n}\n\nexport interface Sources {\n  props: ReactPropsSource<CollectionProps>;\n}\n\nexport interface Sinks<TItemState> {\n  props: Stream<{\n    items: TItemState[];\n  }>;\n}\n\n// TODO Assuming the use of `@cycle/state` for now,\n// make configurable, since onionify itself supports that,\n// so that it could be set globally, without the need for\n// every component to explicitly specify the `channelName`.\nconst DEFAULT_STATE_CHANNEL_NAME = \"state\";\n\nexport function defaultItemIsolate<TProps>(props: TProps) {\n  return { \"*\": null };\n}\n\n// Note: Reusing the `@cycle/state`s lens implementation almost as is.\nexport function itemLens(\n  itemKeyFn: ItemKeyFn<any>,\n  key: Key\n): Lens<any[], any> {\n  return {\n    get(arr: Array<any> | undefined): any {\n      if (typeof arr === \"undefined\") return void 0;\n      for (let i = 0, n = arr.length; i < n; ++i) {\n        if (itemKeyFn(arr[i], i) === key) {\n          return arr[i];\n        }\n      }\n      return void 0;\n    },\n\n    set(arr: Array<any> | undefined, item: any): any {\n      if (typeof arr === \"undefined\") {\n        return [item];\n      } else if (typeof item === \"undefined\") {\n        return arr.filter((s, i) => itemKeyFn(s, i) !== key);\n      }\n\n      return arr.map((s, i) => {\n        if (itemKeyFn(s, i) === key) return item;\n        return s;\n      });\n    }\n  };\n}\n\nexport function main(sources: Sources): Sinks<any> {\n  const state$ = xs.fromObservable(\n    sources.props\n      .pluck(\"channelName\")\n      .map(\n        (channelName?: string) =>\n          (sources[channelName || DEFAULT_STATE_CHANNEL_NAME] as StateSource<\n            any\n          >).stream\n      )\n      .flatten()\n  );\n\n  return {\n    props: state$.map((items: any[]) => ({ items }))\n  };\n}\n\ninterface MakeDefaultItemRenderOpts<TItemState> extends CollectionProps {\n  itemComponent: ComponentType<TItemState>;\n}\n\nfunction makeDefaultItemRender<TItemState extends CycleConnectOptionsProps>(\n  opts: MakeDefaultItemRenderOpts<TItemState>\n) {\n  const ItemComponent = opts.itemComponent;\n  const {\n    channelName = DEFAULT_STATE_CHANNEL_NAME,\n    itemKeyFn,\n    itemIsolate\n  } = opts;\n\n  return function defaultItemRender(\n    itemState: TItemState,\n    itemKey: Key,\n    index: number\n  ): ReactNode {\n    const stateScope = itemKeyFn ? itemLens(itemKeyFn, itemKey) : index;\n    const itemScope = itemIsolate || defaultItemIsolate;\n    const otherScopes =\n      typeof itemScope === \"function\"\n        ? (itemScope as IsolateOptionFn<TItemState>)(itemState)\n        : itemScope;\n\n    const itemIsolateProp =\n      typeof otherScopes === \"object\"\n        ? { ...otherScopes, [channelName]: stateScope }\n        : { \"*\": otherScopes, [channelName]: stateScope };\n\n    return (\n      <ItemComponent key={itemKey} {...itemState} isolate={itemIsolateProp} />\n    );\n  };\n}\n\nfunction render<TItemState>(props: ViewProps<TItemState>) {\n  const { items, itemKeyFn, itemRender, itemComponent } = props;\n\n  if (!items) return null;\n  if (!itemRender && !itemComponent) {\n    throw new Error(\n      'You need either \"itemRender\" or \"itemComponent\" attribute ' +\n        \"defined on a <Collection>\"\n    );\n  }\n\n  const _itemRender = itemRender || makeDefaultItemRender(props as any);\n  return items.map((itemState: TItemState, index: number) => {\n    const itemKey = itemKeyFn ? itemKeyFn(itemState, index) : index;\n    return _itemRender(itemState, itemKey, index);\n  });\n}\n\nconst cycleConnectOpts = {\n  isolate: (props: CollectionProps) => ({\n    [props.channelName || DEFAULT_STATE_CHANNEL_NAME]: props.lens || void 0,\n    \"*\": null\n  }),\n  render,\n  displayName: \"Collection\"\n};\n\nexport const Collection = cycleConnect(main, cycleConnectOpts)();\n","import { Lens } from \"@cycle/state\";\n\nexport type EqualsFn<TItemState> = (\n  item1: TItemState,\n  item2: TItemState\n) => boolean;\n\nexport function makeFilteredListLens<TState extends {}, TItemState>(\n  stateProp: string,\n  filterPredicate: (item: TItemState, state: TState) => boolean,\n  equals: string | EqualsFn<TItemState>\n): Lens<TState, TItemState[]> {\n  const mapStateProp = (state: TState) => state[stateProp] as TItemState[];\n  const equalsFn =\n    typeof equals === \"function\"\n      ? equals\n      : (item1: TItemState, item2: TItemState) =>\n          typeof item1 === \"object\" &&\n          typeof item2 === \"object\" &&\n          item1[equals] === item2[equals];\n\n  return {\n    get: (state: TState) => {\n      return mapStateProp(state).filter(item => filterPredicate(item, state));\n    },\n\n    set: (state: TState, nextFilteredItems: TItemState[]) => {\n      const arr = mapStateProp(state);\n      const prevFilteredItems = arr.filter(item =>\n        filterPredicate(item, state)\n      );\n\n      // TODO: Use spread operator once it works in TypeScript:\n      // Tracked by: https://github.com/Microsoft/TypeScript/issues/10727\n      // Fixed by (unmerged): https://github.com/Microsoft/TypeScript/pull/13288\n      return Object.assign({}, state, {\n        [stateProp]: arr\n          .map(item => nextFilteredItems.find(i => equalsFn(i, item)) || item)\n          .filter(\n            item =>\n              prevFilteredItems.some(i => equalsFn(i, item)) &&\n              nextFilteredItems.some(i => equalsFn(i, item))\n          )\n      });\n    }\n  };\n}\n"],"names":["cycleConnect","DEFAULT_STATE_CHANNEL_NAME"],"mappings":"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"}