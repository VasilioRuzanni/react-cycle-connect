{"version":3,"file":"index.js","sources":["../../src/drivers/fnCallEffectDriver.ts","../../src/interactions/makeInteractFn.ts","../../src/interactions/makeInteractionsProp.ts","../../node_modules/@cycle/src/adapt.ts","../../src/interactions/DefaultInteractionsSource.ts","../../src/interactions/interactionsWrapper.ts","../../src/wrappers/reactLifecycleWrapper.ts","../../src/wrappers/reactPropsWrapper.ts","../../src/core/utils.ts","../../src/core/makeCycleNode.ts","../../src/cycleConnect.ts","../../src/components/Isolator.tsx"],"sourcesContent":["import { Stream } from 'xstream';\n\n// TODO: Somehow specify that this driver, while generic enough to operate\n// \"function calls\", not really that generic because function can be called\n// in a way that a synchronous response it expected (i.e., it might return\n// a `Promise` back, or just some pure calculation result).\n\n// TODO: Consider extending this to have result passed back as a source\n\nexport type FnCallEffect = {\n  fn: (...args: any[]) => any;\n  args: any[];\n};\n\nexport function makeFnCallEffectDriver() {\n  return function fnCallEffectDriver(fnCallEffect$: Stream<FnCallEffect>) {\n    fnCallEffect$.addListener({\n      next(fnCallEffect) {\n        if (typeof fnCallEffect.fn === 'function') {\n          fnCallEffect.fn.apply(null, fnCallEffect.args);\n        }\n      }\n    });\n  };\n}\n","import { Stream } from 'xstream';\nimport { InteractFn, InteractionEvent } from './types';\n\n// tslint:disable no-any\nexport function makeInteractFn(\n  interaction$: Stream<InteractionEvent>\n): InteractFn {\n  return function interactFn(interactionType: string, predefinedValue?: any) {\n    return (value: any) => {\n      interaction$._n({\n        type: interactionType,\n        value: typeof predefinedValue !== 'undefined' ? predefinedValue : value\n      });\n    };\n  };\n}\n","import { InteractFn, InteractionsProp } from './types';\n\n// tslint:disable no-any\nexport function makeInteractionsProp<TInteractionEvents = {}>(\n  interactFn: InteractFn\n): InteractionsProp<TInteractionEvents> {\n  const interactionsPropProxyHandler = {\n    get(target: any, interactionEventName: string) {\n      return interactFn.call(null, interactionEventName);\n    }\n  };\n\n  return new Proxy({}, interactionsPropProxyHandler);\n}\n",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/Users/space/space/3_build/1_techniques/workshop/events/react-cycle-connect/node_modules/@cycle/src/adapt.ts"},"import { Stream, Subscription } from \"xstream\";\nimport { adapt } from \"@cycle/run/lib/adapt\";\nimport { InteractionsSourceInternal, InteractionEvent } from \"./types\";\n\nexport class DefaultInteractionsSource implements InteractionsSourceInternal {\n  _interaction$: Stream<InteractionEvent>;\n\n  constructor(stream: Stream<InteractionEvent>) {\n    this._interaction$ = adapt(stream);\n  }\n\n  // tslint:disable-next-line no-any\n  public select<TEvent = any, TInteractionType extends string = string>(\n    interactionSelector: TInteractionType\n  ): Stream<TEvent> {\n    return this._interaction$\n      .filter(\n        (i: InteractionEvent<TInteractionType>) =>\n          i.type === interactionSelector\n      )\n      .map(interaction => interaction.value);\n  }\n}\n\nexport default DefaultInteractionsSource;\n","import xs, { Stream, Subscription } from \"xstream\";\nimport dropRepeats from \"xstream/extra/dropRepeats\";\nimport sampleCombine from \"xstream/extra/sampleCombine\";\nimport { adapt } from \"@cycle/run/lib/adapt\";\nimport { Sources, Sinks, Drivers, Main } from \"@cycle/run\";\nimport { CycleMainFn } from \"../types\";\nimport { DefaultInteractionsSource } from \"./DefaultInteractionsSource\";\nimport {\n  InteractionsSourceInternal,\n  InteractionEvent,\n  InteractFn\n} from \"./types\";\nimport { makeInteractFn } from \"./makeInteractFn\";\nimport { ReactPropsSource } from \"../index\";\n\nexport function makeInteractionsWrapper() {\n  const name = \"interactions\";\n  const fnCallEffectDriverKey = \"fnCallEffect\"; // TODO: Make configurable\n\n  const interaction$ = xs.create<InteractionEvent>();\n  const interactFn = makeInteractFn(interaction$);\n\n  function interactionsWrapper(mainFn: CycleMainFn): CycleMainFn {\n    return function mainWithInteractions(\n      sources: Sources<Drivers>\n    ): Sinks<Main> {\n      const interactionsSource = new DefaultInteractionsSource(interaction$);\n      const interactionsSourceProxyHandler = {\n        // tslint:disable-next-line no-any\n        get(target: any, attr: string) {\n          if (typeof target[attr] === \"undefined\") {\n            return (target as InteractionsSourceInternal).select(attr);\n          }\n          return target[attr];\n        }\n      };\n\n      sources[name] = new Proxy(\n        interactionsSource,\n        interactionsSourceProxyHandler\n      );\n      const sinks = mainFn(sources);\n      const upstreamInteractions$ = sinks[name] as Stream<{\n        // tslint:disable-next-line no-any\n        [propName: string]: Stream<any>;\n      }>;\n\n      // TODO: The current experimental/hacky code should be removed, though\n      const propsSource = sources.props as ReactPropsSource<any>;\n      if (upstreamInteractions$ && propsSource) {\n        const props$ = propsSource.props$;\n        const upstreamInteractionFnCall$ = upstreamInteractions$\n          .compose(sampleCombine(props$))\n          .map(([upstreamInteractions, props]) => {\n            const fnCallStreams = Object.keys(upstreamInteractions)\n              .filter(propName => typeof props[propName] === \"function\")\n              .map(propName => {\n                return upstreamInteractions[propName].map(\n                  propInteractionValue => ({\n                    fn: props[propName],\n                    args: [propInteractionValue]\n                  })\n                );\n              });\n\n            return xs.merge.apply(null, fnCallStreams);\n          })\n          .flatten();\n\n        // TODO: We're mutating the sinks here, find out how to implement this\n        // in a more safe and elegant way\n        sinks[fnCallEffectDriverKey] = sinks[fnCallEffectDriverKey]\n          ? xs.merge(sinks[fnCallEffectDriverKey], upstreamInteractionFnCall$)\n          : upstreamInteractionFnCall$;\n      }\n\n      return sinks;\n    };\n  }\n\n  return {\n    interactionsWrapper,\n    interactFn\n  };\n}\n","import { ErrorInfo } from \"react\";\nimport xs, { Stream, MemoryStream } from \"xstream\";\nimport dropRepeats from \"xstream/extra/dropRepeats\";\nimport { adapt } from \"@cycle/run/lib/adapt\";\nimport { Sources, Sinks, Drivers, Main } from \"@cycle/run\";\nimport { CycleMainFn } from \"../types\";\n\nconst lifecycleHookNames = [\n  // \"willMount\",\n  \"didMount\",\n  // \"willReceiveProps\",\n  // \"willUpdate\",\n  \"didUpdate\",\n  \"willUnmount\",\n  \"didCatch\"\n];\n\nexport interface ReactLifecycleStreams<TProps> {\n  willMount$: Stream<null>;\n  didMount$: Stream<null>;\n  willReceiveProps$: Stream<TProps>;\n  willUpdate$: Stream<TProps>;\n  didUpdate$: Stream<TProps>;\n  willUnmount$: Stream<null>;\n  didCatch$: Stream<{\n    error: Error;\n    errorInfo: ErrorInfo;\n  }>;\n}\n\nexport class ReactLifecycleSource<TProps> {\n  lifecycleStreams: ReactLifecycleStreams<TProps>;\n\n  constructor(lifecycleStreams: ReactLifecycleStreams<TProps>) {\n    this.lifecycleStreams = lifecycleStreams;\n  }\n}\n\nlifecycleHookNames.forEach(hookName => {\n  ReactLifecycleSource.prototype[hookName] = function() {\n    return this.lifecycleStreams[`${hookName}$`];\n  };\n});\n\nexport function makeReactLifecycleWrapper<TProps>(): {\n  lifecycleWrapper: (mainFn: CycleMainFn) => CycleMainFn;\n  lifecycleStreams: ReactLifecycleStreams<TProps>;\n} {\n  const name = \"lifecycle\";\n\n  const lifecycleStreams = {} as ReactLifecycleStreams<TProps>;\n  lifecycleHookNames.forEach(hookName => {\n    lifecycleStreams[`${hookName}$`] = new Stream<any>();\n  });\n\n  function reactLifecycleWrapper(mainFn: CycleMainFn): CycleMainFn {\n    return function mainWithReactLifecycle(\n      sources: Sources<Drivers>\n    ): Sinks<Main> {\n      const _sources = {\n        ...sources,\n        [name]: new ReactLifecycleSource(lifecycleStreams)\n      };\n\n      return mainFn(_sources);\n    };\n  }\n\n  return {\n    lifecycleWrapper: reactLifecycleWrapper,\n    lifecycleStreams\n  };\n}\n","import xs, { Stream, MemoryStream, Subscription } from \"xstream\";\nimport dropRepeats from \"xstream/extra/dropRepeats\";\nimport { Sources, Sinks, Drivers, Main } from \"@cycle/run\";\nimport { adapt } from \"@cycle/run/lib/adapt\";\nimport { CycleMainFn } from \"../types\";\n\nexport class ReactPropsSource<TProps> {\n  public props$: MemoryStream<TProps>;\n  private _props$: MemoryStream<TProps>;\n\n  constructor(stream: Stream<TProps>) {\n    this._props$ = stream.compose(dropRepeats()).remember();\n    this.props$ = adapt(this._props$);\n  }\n\n  public pluck<P extends keyof TProps>(\n    propName: P\n  ): Stream<TProps[P] | undefined> {\n    return this._props$\n      .map(props => (props && props[propName]) || void 0)\n      .compose(dropRepeats())\n      .remember();\n  }\n\n  public select<P extends keyof TProps>(\n    propSelector: P\n  ): ReactPropsSource<TProps[P] | undefined> {\n    return new ReactPropsSource<TProps[P] | undefined>(\n      this.pluck(propSelector)\n    );\n  }\n}\n\nexport function makeReactPropsWrapper<TProps extends {}>(\n  inputProps$: Stream<TProps>,\n  willUnmount$: Stream<null>\n): {\n  propsWrapper: (main: CycleMainFn) => CycleMainFn;\n  props$: MemoryStream<TProps>;\n} {\n  const name = \"props\";\n  const props$ = xs.createWithMemory<TProps>().endWhen(willUnmount$);\n\n  function reactPropsWrapper(mainFn: CycleMainFn): CycleMainFn {\n    return function mainWithReactProps(sources: Sources<Drivers>): Sinks<Main> {\n      const sinkPropsImitator$ = xs.create<TProps>();\n      const combinedProps$ = xs\n        .merge(inputProps$, sinkPropsImitator$)\n        .fold<TProps>(\n          (combinedProps: TProps, newProps: TProps) => ({\n            ...(combinedProps as any),\n            ...(newProps as any)\n          }),\n          void 0 as any | undefined\n        )\n        .drop(1) // Dropping the initial `void 0`\n        .remember()\n        .endWhen(willUnmount$);\n\n      const _sources = {\n        ...sources,\n        [name]: new ReactPropsSource(combinedProps$) as any\n      };\n      console.log(\"_sources\", _sources);\n      const sinks = mainFn(_sources);\n      const propsSink = sinks[name];\n      delete sinks[name];\n\n      // Subscribe to combined props immediately to collect those in program's\n      // `propsSource` so that the first subscriber immediately gets its\n      // latest value.\n      combinedProps$.addListener({\n        next: (value: any) => props$._n(value)\n      });\n\n      if (propsSink) {\n        const sinkProps$ = xs.fromObservable(propsSink);\n\n        // TODO: Imitate with .imitate() once the way to convert\n        // `MemoryStream` to `Stream` is found\n        // sinkPropsImitator$.imitate(sinkProps$);\n        sinkProps$.endWhen(willUnmount$).addListener({\n          next: (value: any) => sinkPropsImitator$._n(value),\n          complete: () => sinkPropsImitator$._c(),\n          error: (error: any) => sinkPropsImitator$._e(error)\n        });\n      }\n\n      return sinks;\n    };\n  }\n\n  return {\n    propsWrapper: reactPropsWrapper,\n    props$\n  };\n}\n","import xs, { Stream, Subscription } from \"xstream\";\nimport { Drivers, Sources, Sinks, SinkProxies, Main } from \"@cycle/run\";\nimport isolate from \"@cycle/isolate\";\nimport {\n  CycleMainFn,\n  CycleMainFnWrapper,\n  CycleConnectOptionsProps,\n  IsolateOption\n} from \"../types\";\n\n// [[TODO: Think about renaming SinkProxies to something else maybe\n// to prevent confusing them with `@cycle/run`s SinkProxies type\n// and semantics of operating on the \"run\" side]]\n\n// Borrowed from `@cycle/run` itself (TODO: we might need a different type)\n// TODO: How to abstract away from `xs` here?\n// I mean, this is not really only internal stuff, its what drives\n// the app, so the actual streams should be a particular lib streams\n// (xstream, RxJS, most)\n// export function makeSinkProxies<\n//   So extends Sources<Drivers>,\n//   Si extends Sinks<Main>\n// >(driversOrSources: Drivers | So): SinkProxies<Si> {\n//   const sinkProxies: SinkProxies<Si> = {} as SinkProxies<Si>;\n//   // Note, that in both cases (drivers and sources) we need to preserve\n//   // all `sources`'  attributes, even if they're undefined, because there\n//   // might be write-only drivers that provide nothing as source, but still\n//   // expect something as sinks. So, if we filter them out as being \"falsy\"\n//   // and not create a sink proxy with that name, then we would never get\n//   // a value from a program to a write-only driver.\n//   for (const name in driversOrSources) {\n//     if (driversOrSources.hasOwnProperty(name)) {\n//       sinkProxies[name] = xs.create<any>();\n//     }\n//   }\n//   return sinkProxies;\n// }\n\nexport function makeSinkProxies(\n  driversOrSources: Drivers | Sources<Drivers>\n): SinkProxies<Drivers | Sources<Drivers>> {\n  const sinkProxies: SinkProxies<Drivers> = {} as SinkProxies<Drivers>;\n  for (const name in driversOrSources) {\n    if (driversOrSources.hasOwnProperty(name)) {\n      sinkProxies[name] = xs.create<any>();\n    }\n  }\n  return sinkProxies;\n}\n\nexport function subscribeStreamToStream(\n  stream: Stream<any>,\n  sourceStream: Stream<any>,\n  sourceName?: string\n): Subscription {\n  return sourceStream.subscribe({\n    next: (value: any) => stream._n(value),\n    error: (error: any) => stream._e(error),\n    // tslint:disable-next-line:no-empty\n    complete: () => {} // Noop\n  });\n}\n\nexport function subscribeSinkProxiesToSinks(\n  sinkProxies: SinkProxies<Drivers | Sources<Drivers>>,\n  sinks: Sinks<Main>\n): Subscription[] {\n  const sinkNames: Array<string> = Object.keys(sinks).filter(\n    name => !!sinkProxies[name]\n  );\n\n  return sinkNames.map(name =>\n    subscribeStreamToStream(\n      sinkProxies[name],\n      xs.fromObservable(sinks[name] as any),\n      name\n    )\n  );\n}\n\nexport function pipeWrapper(f: CycleMainFnWrapper, g: CycleMainFnWrapper) {\n  return (mainFn: CycleMainFn) => g(f(mainFn));\n}\n\nexport function wrapMain(\n  mainFn: CycleMainFn,\n  wrappers: CycleMainFnWrapper[] = []\n): CycleMainFn {\n  if (!wrappers.length) {\n    return mainFn;\n  }\n\n  const combinedWrapperFn = wrappers.reduce(pipeWrapper, (value: any) => value);\n  return combinedWrapperFn(mainFn);\n}\n\nexport function maybeIsolate<P extends CycleConnectOptionsProps>(\n  mainFn: CycleMainFn,\n  isolateOption?: IsolateOption,\n  isRootCycle?: boolean,\n  initialProps?: P\n): CycleMainFn {\n  // Rendering-level `isolate` prop, overrides component-level\n  // `isolate` option\n  const isolateProp =\n    initialProps && typeof initialProps.isolate !== \"undefined\"\n      ? initialProps.isolate\n      : void 0;\n\n  if (isolateProp) {\n    isolateOption = isolateProp;\n  }\n\n  // Do nothing unless there is `isolateOption` or `isolateProp`\n  if (!isolateOption) {\n    return mainFn;\n  }\n\n  const _isolateOption =\n    typeof isolateOption === \"function\"\n      ? isolateOption(initialProps)\n      : isolateOption;\n\n  return isolate(mainFn, _isolateOption);\n}\n","import { Stream, Subscription } from \"xstream\";\nimport {\n  Drivers,\n  Sources,\n  Sinks,\n  DisposeFunction,\n  SinkProxies,\n  Main\n} from \"@cycle/run\";\nimport isolate from \"@cycle/isolate\";\nimport { makeFnCallEffectDriver } from \"../drivers/fnCallEffectDriver\";\nimport {\n  CycleConnectOptions,\n  CycleConnectOptionsProps,\n  CycleMainFn,\n  CycleNode,\n  StatelessSinkProxies\n} from \"../types\";\nimport {\n  makeSinkProxies,\n  wrapMain,\n  maybeIsolate,\n  subscribeSinkProxiesToSinks\n} from \"./utils\";\n\nexport function makeCycleNode<P extends CycleConnectOptionsProps>(\n  mainFn: CycleMainFn,\n  cycleConnectOptions: CycleConnectOptions = {},\n  upstreamSources: Sources<Drivers> = {},\n  upstreamSinkProxies: SinkProxies<Sinks<Main>> = {},\n  initialProps?: P,\n  componentName?: string\n): CycleNode {\n  const isRootCycle = !!cycleConnectOptions.root;\n  const { drivers, isolate: isolateOption } = cycleConnectOptions;\n\n  const sinkProxies: StatelessSinkProxies<Sinks<Main>> =\n    isRootCycle && drivers ? makeSinkProxies(drivers) : {};\n  const childSources: Sources<Drivers> = {};\n  const sinkSubscriptions: Subscription[] = [];\n  const upstreamSinkSubscriptions: Subscription[] = [];\n  const innerSinks: Sinks<Main> = {};\n\n  function cycleNodeify(_mainFn: CycleMainFn): CycleMainFn {\n    return function mainCycleNodeified(sources: Sources<Drivers>) {\n      Object.assign(childSources, sources);\n      const _innerSinks = _mainFn(sources);\n\n      // Extend the sinkProxies with more stuff, possibly provided\n      // by the other wrappers (applied on top of this wrapper)\n      Object.assign(sinkProxies, makeSinkProxies(sources));\n      Object.assign(innerSinks, _innerSinks);\n\n      // Note: the actual subscription happens after we subscribed\n      // to upstream sinkProxies because the proxies are stateless\n      // and we want to make sure everything is wired up upfront\n      // (as long as its possible).\n      return sinkProxies;\n    };\n  }\n\n  // Note: The \"Cycle Node\" wrapper should go before regular wrappers\n  // so that children can see the possibly provided sources and return\n  // the sinks for these wrappers.\n  // \"Inner\" wrappers are applied first, though, as they're only working\n  // in the context of the \"current\" Cycle program.\n  // TODO: We're applying the wrappers here, but how'd we dispose\n  // them in case they need to? Or is it a particular wrapper responsibility\n  // to get connected to a pipeline in a way it automatically \"unsubscribes\"?\n  // Aside: Consider how this lays out into the upcoming Cycle plugins\n  // architecture.\n  const wrappers = [\n    ...(cycleConnectOptions._innerWrappers || []),\n    cycleNodeify,\n    ...(cycleConnectOptions.wrappers || [])\n  ];\n\n  const wrappedMain = wrapMain(mainFn, wrappers);\n  const wrappedAndIsolatedMain = maybeIsolate(\n    wrappedMain,\n    isolateOption,\n    isRootCycle,\n    initialProps\n  );\n\n  function _internalDispose() {\n    sinkSubscriptions.forEach(s => s.unsubscribe());\n    upstreamSinkSubscriptions.forEach(s => s.unsubscribe());\n    Object.keys(sinkProxies).forEach(name => sinkProxies[name]._c());\n  }\n\n  function subscribeToInnerSinks() {\n    Array.prototype.push.apply(\n      sinkSubscriptions,\n      subscribeSinkProxiesToSinks(sinkProxies, innerSinks)\n    );\n  }\n\n  return {\n    sinkProxies,\n    childSources,\n    run(): DisposeFunction {\n      if (isRootCycle) {\n        const runFn = cycleConnectOptions.runFn;\n        if (typeof runFn !== \"function\") {\n          throw new Error(\n            `You need the 'runFn' passed as configuration\n            option of cycleConnect(...) when 'root' option is enabled.`\n          );\n        }\n\n        const _drivers = {\n          // TODO: Make `fnCallEffect` key configurable\n          fnCallEffect: makeFnCallEffectDriver(),\n          ...cycleConnectOptions.drivers\n        };\n        const _cycleDispose = runFn(wrappedAndIsolatedMain, _drivers);\n        subscribeToInnerSinks();\n\n        return function disposeContext(): void {\n          _internalDispose();\n          _cycleDispose();\n        };\n      }\n\n      // Run the current \"sub-cycle\" otherwise\n      const _sinks = wrappedAndIsolatedMain(upstreamSources);\n      Array.prototype.push.apply(\n        upstreamSinkSubscriptions,\n        subscribeSinkProxiesToSinks(upstreamSinkProxies, _sinks)\n      );\n      subscribeToInnerSinks();\n\n      return function disposeContext(): void {\n        _internalDispose();\n      };\n    }\n  };\n}\n","import React, {\n  SFC,\n  PureComponent,\n  ComponentClass,\n  ComponentType,\n  ErrorInfo,\n  ReactNode\n} from \"react\";\nimport xs, { Stream, MemoryStream, Subscription } from \"xstream\";\nimport { Sources, Sinks, DisposeFunction, Drivers, Main } from \"@cycle/run\";\nimport isolate from \"@cycle/isolate\";\nimport { makeCycleNode } from \"./core/makeCycleNode\";\nimport { makeReactPropsWrapper } from \"./wrappers/reactPropsWrapper\";\nimport {\n  makeReactLifecycleWrapper,\n  ReactLifecycleStreams\n} from \"./wrappers/reactLifecycleWrapper\";\nimport {\n  makeInteractionsWrapper,\n  InteractFn,\n  InteractionsProp,\n  makeInteractionsProp,\n  InteractionsProps\n} from \"./interactions\";\nimport {\n  StatelessSinkProxies,\n  CycleConnectOptions,\n  CycleMainFn,\n  CycleMainFnWrapper,\n  CycleNode,\n  MakeConnectedComponentFn,\n  IsolateOption,\n  CycleConnectContextType,\n  ShouldUpdateFunction\n} from \"./types\";\n\nconst CONTEXT_TYPES = {\n  cycleNodeLink: () => null\n};\n\nfunction noopMainFn(sources: Sources<Drivers>): Sinks<Main> {\n  return {};\n}\n\nfunction defaultRenderFn(props: { children?: ReactNode }) {\n  return props.children || null;\n}\n\n// TODO: Reconsider typing (perhaps, once conditional types land in TypeScript)\nexport function cycleConnect<\n  TProps = {},\n  TViewProps = {},\n  TSinkProps = {},\n  TInteractionEvents = {}\n>(\n  mainFn: CycleMainFn<TProps | Partial<TViewProps>, TSinkProps>,\n  options?: CycleConnectOptions\n): MakeConnectedComponentFn<TProps, InteractionsProps>;\n\nexport function cycleConnect<TProps = {}>(\n  options: CycleConnectOptions\n): MakeConnectedComponentFn<TProps, InteractionsProps>;\n\nexport function cycleConnect<\n  TProps = {},\n  TViewProps = {},\n  TSinkProps = {},\n  TInteractionEvents = {}\n>(\n  mainFn:\n    | CycleMainFn<TProps | Partial<TViewProps>, TSinkProps>\n    | CycleConnectOptions,\n  options: CycleConnectOptions = {}\n): MakeConnectedComponentFn<TProps, InteractionsProps<TInteractionEvents>> {\n  let _mainFn: CycleMainFn;\n\n  if (typeof mainFn === \"object\") {\n    options = mainFn as CycleConnectOptions;\n    _mainFn = noopMainFn as CycleMainFn;\n  }\n\n  if (typeof mainFn === \"function\") {\n    _mainFn = mainFn;\n  }\n\n  return function makeComponent<TOuterProps, TInnerProps>(\n    WrappedComponent?: ComponentType<TInnerProps>\n  ) {\n    const sourceComponentName =\n      (options.render && \"customRenderFn\") ||\n      (WrappedComponent &&\n        (WrappedComponent.displayName ||\n          WrappedComponent.name ||\n          \"AnonymousComponent\")) ||\n      \"defaultRenderFn\";\n\n    const displayName =\n      options.displayName || `cycleConnect(${sourceComponentName})`;\n\n    const shouldUpdateFn = options.shouldUpdate || (x => true);\n\n    return class CycleConnectContainer extends PureComponent<TOuterProps> {\n      static contextTypes = CONTEXT_TYPES;\n      static childContextTypes = CONTEXT_TYPES;\n      static displayName = displayName;\n\n      cycleNode: CycleNode;\n      disposeCycleNode: DisposeFunction;\n\n      lifecycleStreams: ReactLifecycleStreams<TOuterProps>;\n\n      inputProps$: MemoryStream<TInnerProps>;\n      props$: MemoryStream<TInnerProps>;\n      props$Subscription: Subscription;\n      propsSnapshot: TInnerProps;\n\n      interactFn: InteractFn;\n      interactionsProp: InteractionsProp<TInteractionEvents>;\n\n      constructor(\n        props: TOuterProps & TInnerProps,\n        context: CycleConnectContextType\n      ) {\n        super(props, context);\n\n        const { cycleNodeLink } = context;\n        const sources = (cycleNodeLink && cycleNodeLink.sources) || {};\n        const sinkProxies = (cycleNodeLink && cycleNodeLink.sinkProxies) || {};\n\n        // Configuring internal wrappers\n        // React component lifecycle\n        const {\n          lifecycleWrapper,\n          lifecycleStreams\n        } = makeReactLifecycleWrapper<TOuterProps>();\n        this.lifecycleStreams = lifecycleStreams;\n\n        // React props\n        this.inputProps$ = xs.createWithMemory<TInnerProps>().startWith(props);\n        const { propsWrapper, props$ } = makeReactPropsWrapper(\n          this.inputProps$,\n          this.lifecycleStreams.willUnmount$\n        );\n        this.props$ = props$;\n\n        // Interactions\n        const { interactionsWrapper, interactFn } = makeInteractionsWrapper();\n        this.interactFn = interactFn;\n        this.interactionsProp = makeInteractionsProp(interactFn);\n\n        const _options = {\n          ...options,\n          _innerWrappers: [interactionsWrapper, propsWrapper, lifecycleWrapper]\n        };\n\n        this.cycleNode = makeCycleNode(\n          _mainFn,\n          _options,\n          sources,\n          sinkProxies,\n          props,\n          displayName\n        );\n\n        this.disposeCycleNode = this.cycleNode.run();\n      }\n\n      getChildContext(): CycleConnectContextType {\n        const cn = this.cycleNode;\n        if (!cn) {\n          return {};\n        }\n\n        return {\n          cycleNodeLink: {\n            sources: cn.childSources,\n            sinkProxies: cn.sinkProxies\n          }\n        };\n      }\n\n      // componentWillMount() {\n      //   this.subscribeToPropsUpdates();\n      //   this.lifecycleStreams.willMount$._n(null);\n      // }\n\n      componentDidMount() {\n        //   this.lifecycleStreams.willMount$._n(null);\n        this.subscribeToPropsUpdates(shouldUpdateFn);\n        this.lifecycleStreams.didMount$._n(null);\n      }\n\n      // componentWillReceiveProps(nextProps: Readonly<TOuterProps>) {\n      //   this.lifecycleStreams.willReceiveProps$._n(nextProps);\n      // }\n\n      // NOTE: Not passing `nextState` intentionally, keep the state\n      // inside the \"connected\" Cycle program instead.\n      // componentWillUpdate(nextProps: Readonly<TOuterProps>) {\n      //   this.lifecycleStreams.willUpdate$._n(nextProps);\n      // }\n\n      componentDidUpdate(prevProps: Readonly<TOuterProps>) {\n        this.lifecycleStreams.didUpdate$._n(prevProps);\n      }\n\n      componentWillUnmount() {\n        this.lifecycleStreams.willUnmount$._n(null);\n\n        if (this.disposeCycleNode) {\n          this.disposeCycleNode();\n        }\n      }\n\n      componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        this.lifecycleStreams.didCatch$._n({ error, errorInfo });\n      }\n\n      subscribeToPropsUpdates(shouldUpdateFn: ShouldUpdateFunction) {\n        console.log(\"susbcribed to props updates\", displayName);\n        this.props$.endWhen(this.lifecycleStreams.willUnmount$).addListener({\n          next: (props: TInnerProps) => {\n            console.log(\"next\", displayName);\n            console.log(\"previous prop?\", this.propsSnapshot);\n            console.log(\"got a new prop\", props);\n            const update = shouldUpdateFn(this.propsSnapshot, props);\n            console.log(\"shouldUpdate\", update);\n            this.propsSnapshot = props;\n            update && this.forceUpdate();\n          }\n        });\n      }\n\n      render() {\n        const props = {\n          ...(this.propsSnapshot as any),\n          interact: this.interactFn,\n          interactions: this.interactionsProp\n        };\n\n        if (typeof options.render === \"function\") {\n          return options.render(props);\n        }\n\n        return WrappedComponent\n          ? React.createElement(WrappedComponent, props)\n          : defaultRenderFn(props);\n      }\n    };\n  };\n}\n","import React, { ReactNode } from 'react';\nimport { Scopes } from '@cycle/isolate';\nimport { cycleConnect } from '../cycleConnect';\n\nexport interface Props {\n  children: ReactNode;\n  scope: Scopes<any>;\n}\n\nexport const Isolator = cycleConnect<Props>({\n  isolate: (props: Props) => props.scope || void 0,\n  displayName: 'Isolator'\n})();\n\nexport default Isolator;\n"],"names":["global","adapt","xs","Stream","React","PureComponent"],"mappings":"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"}